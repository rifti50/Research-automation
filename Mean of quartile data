{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fdc56394",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-16T06:26:11.492091Z",
     "iopub.status.busy": "2025-02-16T06:26:11.491665Z",
     "iopub.status.idle": "2025-02-16T06:26:12.444148Z",
     "shell.execute_reply": "2025-02-16T06:26:12.442550Z"
    },
    "papermill": {
     "duration": 0.9585,
     "end_time": "2025-02-16T06:26:12.446152",
     "exception": false,
     "start_time": "2025-02-16T06:26:11.487652",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/per-quartile-data/Final dataset.xlsx\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "08b04e58",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-16T06:26:12.452806Z",
     "iopub.status.busy": "2025-02-16T06:26:12.452144Z",
     "iopub.status.idle": "2025-02-16T06:26:13.315312Z",
     "shell.execute_reply": "2025-02-16T06:26:13.314413Z"
    },
    "papermill": {
     "duration": 0.868152,
     "end_time": "2025-02-16T06:26:13.317090",
     "exception": false,
     "start_time": "2025-02-16T06:26:12.448938",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Read Excel file\n",
    "df = pd.read_excel('/kaggle/input/per-quartile-data/Final dataset.xlsx', sheet_name='Sheet1')\n",
    "\n",
    "# Extract year from time column\n",
    "df['year'] = df['time'].str.split('q').str[0].astype(int)\n",
    "\n",
    "# Group by country, id, and year, then aggregate numerical columns\n",
    "yearly_df = df.groupby(['country', 'id', 'year']).mean(numeric_only=True).reset_index()\n",
    "\n",
    "# Save results\n",
    "yearly_df.to_excel('Yearly_Aggregated_Data.xlsx', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "56e88e8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-16T06:26:13.322933Z",
     "iopub.status.busy": "2025-02-16T06:26:13.322498Z",
     "iopub.status.idle": "2025-02-16T06:26:13.347730Z",
     "shell.execute_reply": "2025-02-16T06:26:13.346569Z"
    },
    "papermill": {
     "duration": 0.030197,
     "end_time": "2025-02-16T06:26:13.349710",
     "exception": false,
     "start_time": "2025-02-16T06:26:13.319513",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>id</th>\n",
       "      <th>time</th>\n",
       "      <th>EICT</th>\n",
       "      <th>SPC</th>\n",
       "      <th>DL</th>\n",
       "      <th>FI</th>\n",
       "      <th>CONS</th>\n",
       "      <th>INF</th>\n",
       "      <th>EG</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1990q1</td>\n",
       "      <td>10.3641</td>\n",
       "      <td>86.25000</td>\n",
       "      <td>0.361000</td>\n",
       "      <td>1.409504</td>\n",
       "      <td>78.45985</td>\n",
       "      <td>4.780477</td>\n",
       "      <td>31700.55</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1990q2</td>\n",
       "      <td>10.3641</td>\n",
       "      <td>86.25000</td>\n",
       "      <td>0.361000</td>\n",
       "      <td>1.409504</td>\n",
       "      <td>78.45985</td>\n",
       "      <td>4.780477</td>\n",
       "      <td>31700.55</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1990q3</td>\n",
       "      <td>10.3641</td>\n",
       "      <td>86.25000</td>\n",
       "      <td>0.361000</td>\n",
       "      <td>1.409504</td>\n",
       "      <td>78.45985</td>\n",
       "      <td>4.780477</td>\n",
       "      <td>31700.55</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1990q4</td>\n",
       "      <td>10.3641</td>\n",
       "      <td>86.25000</td>\n",
       "      <td>0.361000</td>\n",
       "      <td>1.409504</td>\n",
       "      <td>78.45985</td>\n",
       "      <td>4.780477</td>\n",
       "      <td>31700.55</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1991q1</td>\n",
       "      <td>10.3305</td>\n",
       "      <td>81.66666</td>\n",
       "      <td>0.570386</td>\n",
       "      <td>0.573724</td>\n",
       "      <td>81.29737</td>\n",
       "      <td>5.625864</td>\n",
       "      <td>30654.33</td>\n",
       "      <td>1991</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  country  id    time     EICT       SPC        DL        FI      CONS  \\\n",
       "0  Canada   1  1990q1  10.3641  86.25000  0.361000  1.409504  78.45985   \n",
       "1  Canada   1  1990q2  10.3641  86.25000  0.361000  1.409504  78.45985   \n",
       "2  Canada   1  1990q3  10.3641  86.25000  0.361000  1.409504  78.45985   \n",
       "3  Canada   1  1990q4  10.3641  86.25000  0.361000  1.409504  78.45985   \n",
       "4  Canada   1  1991q1  10.3305  81.66666  0.570386  0.573724  81.29737   \n",
       "\n",
       "        INF        EG  year  \n",
       "0  4.780477  31700.55  1990  \n",
       "1  4.780477  31700.55  1990  \n",
       "2  4.780477  31700.55  1990  \n",
       "3  4.780477  31700.55  1990  \n",
       "4  5.625864  30654.33  1991  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c03bbfee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-16T06:26:13.356059Z",
     "iopub.status.busy": "2025-02-16T06:26:13.355671Z",
     "iopub.status.idle": "2025-02-16T06:26:13.410723Z",
     "shell.execute_reply": "2025-02-16T06:26:13.409707Z"
    },
    "papermill": {
     "duration": 0.059961,
     "end_time": "2025-02-16T06:26:13.412385",
     "exception": false,
     "start_time": "2025-02-16T06:26:13.352424",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>id</th>\n",
       "      <th>year</th>\n",
       "      <th>EICT</th>\n",
       "      <th>SPC</th>\n",
       "      <th>DL</th>\n",
       "      <th>FI</th>\n",
       "      <th>CONS</th>\n",
       "      <th>INF</th>\n",
       "      <th>EG</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1990</td>\n",
       "      <td>10.364100</td>\n",
       "      <td>86.250000</td>\n",
       "      <td>0.361000</td>\n",
       "      <td>1.409504</td>\n",
       "      <td>78.459850</td>\n",
       "      <td>4.780477</td>\n",
       "      <td>31700.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1991</td>\n",
       "      <td>10.343100</td>\n",
       "      <td>83.385415</td>\n",
       "      <td>0.491866</td>\n",
       "      <td>0.887142</td>\n",
       "      <td>80.233300</td>\n",
       "      <td>5.308844</td>\n",
       "      <td>31046.6625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1992</td>\n",
       "      <td>10.328687</td>\n",
       "      <td>80.885410</td>\n",
       "      <td>0.786383</td>\n",
       "      <td>0.953117</td>\n",
       "      <td>81.828420</td>\n",
       "      <td>3.041032</td>\n",
       "      <td>30597.4875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1993</td>\n",
       "      <td>10.337100</td>\n",
       "      <td>80.104160</td>\n",
       "      <td>1.083841</td>\n",
       "      <td>0.893783</td>\n",
       "      <td>81.765302</td>\n",
       "      <td>1.724474</td>\n",
       "      <td>30856.7375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>1994</td>\n",
       "      <td>10.363425</td>\n",
       "      <td>80.489585</td>\n",
       "      <td>1.930893</td>\n",
       "      <td>1.298828</td>\n",
       "      <td>80.116518</td>\n",
       "      <td>0.802881</td>\n",
       "      <td>31683.6350</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  country  id  year       EICT        SPC        DL        FI       CONS  \\\n",
       "0  Canada   1  1990  10.364100  86.250000  0.361000  1.409504  78.459850   \n",
       "1  Canada   1  1991  10.343100  83.385415  0.491866  0.887142  80.233300   \n",
       "2  Canada   1  1992  10.328687  80.885410  0.786383  0.953117  81.828420   \n",
       "3  Canada   1  1993  10.337100  80.104160  1.083841  0.893783  81.765302   \n",
       "4  Canada   1  1994  10.363425  80.489585  1.930893  1.298828  80.116518   \n",
       "\n",
       "        INF          EG  \n",
       "0  4.780477  31700.5500  \n",
       "1  5.308844  31046.6625  \n",
       "2  3.041032  30597.4875  \n",
       "3  1.724474  30856.7375  \n",
       "4  0.802881  31683.6350  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "panel = pd.read_excel('Yearly_Aggregated_Data.xlsx')\n",
    "panel.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "238d8668",
   "metadata": {
    "papermill": {
     "duration": 0.002339,
     "end_time": "2025-02-16T06:26:13.417658",
     "exception": false,
     "start_time": "2025-02-16T06:26:13.415319",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "64d98b11",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-16T06:26:13.423929Z",
     "iopub.status.busy": "2025-02-16T06:26:13.423568Z",
     "iopub.status.idle": "2025-02-16T06:26:13.598486Z",
     "shell.execute_reply": "2025-02-16T06:26:13.597464Z"
    },
    "papermill": {
     "duration": 0.179953,
     "end_time": "2025-02-16T06:26:13.600157",
     "exception": false,
     "start_time": "2025-02-16T06:26:13.420204",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File saved to: /kaggle/working/Yearly_Aggregated_Data.xlsx\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Read Excel file\n",
    "df = pd.read_excel('/kaggle/input/per-quartile-data/Final dataset.xlsx', sheet_name='Sheet1')\n",
    "\n",
    "# Extract year from time column\n",
    "df['year'] = df['time'].str.split('q').str[0].astype(int)\n",
    "\n",
    "# Group by country, id, and year, then aggregate numerical columns\n",
    "yearly_df = df.groupby(['country', 'id', 'year']).mean(numeric_only=True).reset_index()\n",
    "\n",
    "# Save results to the Kaggle working directory\n",
    "yearly_df.to_excel('Yearly_Aggregated_Data.xlsx', index=False)\n",
    "\n",
    "print(\"File saved to: /kaggle/working/Yearly_Aggregated_Data.xlsx\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6675459,
     "sourceId": 10761789,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30886,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.487162,
   "end_time": "2025-02-16T06:26:14.223219",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-16T06:26:08.736057",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
