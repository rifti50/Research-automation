{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "909f8861",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-08T06:10:17.411221Z",
     "iopub.status.busy": "2025-02-08T06:10:17.410869Z",
     "iopub.status.idle": "2025-02-08T06:10:18.333222Z",
     "shell.execute_reply": "2025-02-08T06:10:18.332284Z"
    },
    "papermill": {
     "duration": 0.927741,
     "end_time": "2025-02-08T06:10:18.335160",
     "exception": false,
     "start_time": "2025-02-08T06:10:17.407419",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab39d796",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-07T19:13:58.960943Z",
     "iopub.status.busy": "2025-02-07T19:13:58.960695Z",
     "iopub.status.idle": "2025-02-07T19:14:05.796560Z",
     "shell.execute_reply": "2025-02-07T19:14:05.795032Z",
     "shell.execute_reply.started": "2025-02-07T19:13:58.960919Z"
    },
    "papermill": {
     "duration": 0.001443,
     "end_time": "2025-02-08T06:10:18.339004",
     "exception": false,
     "start_time": "2025-02-08T06:10:18.337561",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Making Panel data of Europe from 2010 to 2019 (Multiple sheets)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2d87b722",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-08T06:10:18.343703Z",
     "iopub.status.busy": "2025-02-08T06:10:18.343166Z",
     "iopub.status.idle": "2025-02-08T06:10:18.903834Z",
     "shell.execute_reply": "2025-02-08T06:10:18.902698Z"
    },
    "papermill": {
     "duration": 0.565231,
     "end_time": "2025-02-08T06:10:18.905886",
     "exception": false,
     "start_time": "2025-02-08T06:10:18.340655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File created at: /kaggle/working/Nature-rent-Mean-Per-Year-Transposed_standardized_data.xlsx\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "from openpyxl import Workbook\n",
    "\n",
    "\n",
    "# Create output directory in Kaggle's working folder\n",
    "output_dir = '/kaggle/working/'\n",
    "os.makedirs(output_dir, exist_ok=True)\n",
    "\n",
    "# Define regional structure from your dataset\n",
    "regions = {\n",
    "    \"Western Europe\": [\n",
    "        \"Austria\", \"Belgium\", \"France\", \"Germany\", \"Ireland\",\n",
    "        \"Liechtenstein\", \"Luxembourg\", \"Netherlands\", \"Switzerland\", \"United Kingdom\"\n",
    "    ],\n",
    "    \"Northern Europe\": [\n",
    "        \"Denmark\", \"Estonia\", \"Finland\", \"Iceland\", \"Latvia\",\n",
    "        \"Lithuania\", \"Norway\", \"Sweden\"\n",
    "    ],\n",
    "    \"Southern Europe\": [\n",
    "        \"Albania\", \"Bosnia and Herzegovina\", \"Croatia\", \"Cyprus\", \"Greece\",\n",
    "        \"Italy\", \"Montenegro\", \"North Macedonia\", \"Portugal\", \"Serbia\",\n",
    "        \"Slovenia\", \"Spain\"\n",
    "    ],\n",
    "    \"Central Europe\": [\n",
    "        \"Austria\", \"Czechia\", \"Germany\", \"Hungary\", \"Liechtenstein\",\n",
    "        \"Poland\", \"Slovak Republic\", \"Slovenia\", \"Switzerland\"\n",
    "    ],\n",
    "    \"Southeastern Europe\": [\n",
    "        \"Albania\", \"Bosnia and Herzegovina\", \"Bulgaria\", \"Croatia\", \"Greece\",\n",
    "        \"Montenegro\", \"North Macedonia\", \"Romania\", \"Serbia\", \"Slovenia\"\n",
    "    ]\n",
    "}\n",
    "\n",
    "# Create Excel writer object\n",
    "output_path = os.path.join(output_dir, 'Nature-rent-Mean-Per-Year-Transposed_standardized_data.xlsx')\n",
    "with pd.ExcelWriter(output_path, engine='openpyxl') as writer:\n",
    "    \n",
    "    # Create each regional sheet\n",
    "    for region, countries in regions.items():\n",
    "        data = []\n",
    "        serial = 1\n",
    "        for country in countries:\n",
    "            for year in range(2010, 2020):\n",
    "                data.append({\n",
    "                    \"Serial\": serial,\n",
    "                    \"Country\": country,\n",
    "                    \"Year\": year\n",
    "                })\n",
    "            serial += 1\n",
    "        \n",
    "        df = pd.DataFrame(data)\n",
    "        df.to_excel(writer, sheet_name=region, index=False)\n",
    "\n",
    "print(f\"File created at: {output_path}\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30886,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.885722,
   "end_time": "2025-02-08T06:10:19.527273",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-08T06:10:14.641551",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
